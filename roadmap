# Phase 1: Beginner – Foundations and Hands-On Basics (Months 1–4)

Objectives: Transition from theoretical knowledge to practical skill.
	- Code proficiently in Python for AI: 
        Write and debug scripts using libraries like NumPy and pandas for data manipulation, and implement basic ML algorithms (e.g. training a simple classifier).
	- Understand core ML concepts and apply them to small datasets:
        Supervised vs. unsupervised learning, train/validation/test splits, common metrics.
	- Train a basic deep learning model: 
        Use a high-level framework (PyTorch) to train a simple neural network (e.g. a CNN on RSNA Pneuomonia).
	- Complete first projects: 
        Finish at least one or two small-scale AI projects (e.g. a patient outcome predictor) and publish code/results on GitHub.
	- Establish a learning routine:
        Develop the habit of allocating time between learning and doing. Avoid the “tutorial trap” by applying each new skill in a project or exercise.
        
## Week 1:

	•	Day 1: Environment & Plan (Setup Day) – Set up your development environment. Install Anaconda or Miniconda for Python, set up a workspace folder for your projects. Test that you can run a Jupyter Notebook. Sign up for key platforms: create accounts on Kaggle, Coursera, and GitHub (if you haven’t). Outline your study schedule on a calendar. Goal: By end of day, you have all tools installed, and you’ve written a short README for yourself mapping out your goals (even paste in this 7-day plan). This primes you for execution.
	•	Day 2: Python Refresh & Data Handling – Spend today solidifying Python basics and data manipulation, as these are critical early on. Complete the Kaggle Python micro-course (it’s short; ~7 lessons) ￼ and the pandas micro-course if time permits. Practice: write a script to load a simple medical dataset (e.g., the Pima Indians Diabetes CSV from UCI repository) and do basic analysis (mean, histogram of each feature). Goal: End of day, you have a Jupyter Notebook saved that demonstrates reading data, manipulating a DataFrame, and plotting a couple of charts. This is your first data exploration!
	•	Day 3: Intro to Machine Learning – Dive into core ML concepts. Work through the Kaggle Intro to Machine Learning course (covering basic model fitting, validation, etc.). Apply what you learn immediately: using the same dataset from Day 2 (or a built-in dataset like sklearn’s iris or a small healthcare dataset), train a simple model (e.g., a decision tree or logistic regression) to predict an outcome. Goal: By end of day, you’ve built your first ML model and evaluated it (print out accuracy or other metrics). It might be a trivial model, but you went through the whole process yourself. Commit this notebook to your new GitHub repo for accountability.
	•	Day 4: Deep Learning Kickoff – Time to get your hands dirty with neural networks. Start Lesson 1 of fast.ai’s Practical Deep Learning course. This first lesson typically walks you through training a CNN on a real dataset (like classifying pet images) using high-level APIs. Follow along and run the code on your machine or in Colab. Goal: By the end of the lesson, you should have trained a model (possibly on pet images or similar) and seen it work. As a personal twist, if you can, try to apply the same process to a medical image dataset: for example, download a small set of chest X-ray images (Kaggle has a TB X-ray dataset) and see if you can get the fast.ai notebook to train on that. Even if not perfect, you’ll learn how to plug in new data.
	•	Day 5: Mini Project Build – Use today to build a mini-project from scratch combining what you’ve learned. One suggestion: Medical Appointment No-Show Predictor. There’s a public dataset of hospital appointments (with features like patient info, whether they showed up or not). Use it to build a classifier predicting no-shows. Steps to do in one day: import data, do EDA (exploratory analysis) for 1-2 hours, decide on a few features, train a simple model (say logistic regression or decision tree), evaluate with confusion matrix. Keep scope small. Alternatively, pick any dataset that interests you. Goal: Have a self-contained notebook that reads a dataset and produces a model with an evaluation. Write a few sentences of conclusion (“My model achieved X% accuracy in predicting ___”). Pushing this project to GitHub is a must. This is your first complete AI in healthcare project (albeit simple) – worth celebrating!
	•	Day 6: Paper and Paper Implementation – Even as a beginner, start the habit of reading original literature. Find a short research paper or even an article on AI in healthcare. For instance, “AI for radiology – an overview” or a case study from a journal like Lancet Digital Health. Spend the morning reading it. Afternoon: do a small experiment related to it. If the paper discusses an algorithm, see if you can implement a piece of it or at least use a library to replicate a result. Example: If the paper is about using Random Forest for disease prediction, try that on your dataset from Day 5. Goal: Write a one-page summary of the paper in your own words – what was the goal, method, outcome? And note one idea it gave you for future projects. This exercise flexes your research muscles early.
	•	Day 7: Review and Reflection – You’ve done a lot in 6 days. Today, consolidate. Revisit each day’s outputs: clean up your code notebooks (add comments, fix any errors you glossed over). Make sure all are pushed to GitHub. Write a short Week 1 Reflection: What was easy? What was challenging? What do you plan next week? This could be in a blog form or even a GitHub gist. Also, take an hour to explore the fast.ai forums or Kaggle forums; post an introduction of yourself and what you did this week – engaging with a community from week 1 is great for accountability. Goal: Have a clear plan for Week 2 based on this week’s experience. Maybe you realized you need more math foundation – plan a resource for that. Or you loved imaging – plan to get a bigger imaging dataset next. End the day by relaxing – watch a documentary or movie (perhaps “AlphaGo” or something inspiring). Reward yourself for completing the 7-day challenge! 